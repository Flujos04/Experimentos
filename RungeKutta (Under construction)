function [U]=RungeKutta(U,ntstep,a,u,v,dx,dy,Nx,Ny,A,R,T,Nx_E,Ny_E,Nx_W,Nx_S,Ny_w,Ny_S,Nx_N,Ny_N)

CFL=2;
umax=max(abs(u(:,:)+a));

for i=1:ntstep
    
    umax=max(abs((u(:,:)+a),abs(u(:,:)-a)));
    vmax=max(abs((v(:,:)+a),abs(v(:,:)-a)));
    
    dt=CFL/((umax/dx) +(vmax/max(dy)));
    
    Y1=U;
    Y2=zeros(Ny-1,Nx-1);
    Y3=Y2;
    Y4=Y3;
    
    alpha=zeros(2,3);
    alpha(1,1)=0.25;alpha(1,2)=1/3;alpha(1,3)=0.5;
    alpha(2,1)=0.125;alpha(2,2)=0.306;alpha(2,3)=0.587;
    
%     [f,g]=centre_fluxes(Nx,Ny,rho,u,v,H,p);
%     [FN, FE, FS, FW] = face_fluxes(f,g,Nx_N,Ny_N,Nx_E,Ny_E,Nx_S,Ny_S,Nx_W,Ny_W,Ny,Nx);%D;
%     Rij=FN+FE+FS+FW;
%     Meter aqui funci√≥n para calcular Ri,j.    
    
    
    Y2(:,:)=U(:,:,:)-(dt/A(:,:))*alpha(1,1)*R1(:,:,:);
    Y3(:,:)=U(:,:,:)-(dt/A(:,:))*alpha(1,2)*R2(:,:,:);
    Y4(:,:)=U(:,:,:)-(dt/A(:,:))*alpha(1,3)*R3(:,:,:);
    U_next(:,:,:)=U(:,:,:)-(dt/A(:,:))*alpha(1,3)*R4(:,:,:);
    U=U_next;
    
    
    rho(:,:)=U(1:Nx-1,:);
    u(:,:)=U(:,:,2)./rho;
    v(:,:)=U(:,:,3)./rho;
    E(:,:)=U(:,:,4)./rho;
    p(:,:)=rho*R*T;
    H(:,:)=E+p./rho;
    T (:,:)= H/(gamma*R/(gamma-1));
end
end
