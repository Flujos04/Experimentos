function [FS1x, FS2x, FS3x, FS4x, FS1y, FS2y, FS3y, FS4y, GS1x, GS2x, GS3x, GS4x, GS1y, GS2y, GS3y, GS4y] = Fluxes (rho, u, v, E, M_inf, Pa, Ta, gamma, R, Nx, Ny)
% Initial stream data
rho_inf = Pa/R/Ta;          % Density
c_inf   = sqrt(gamma*R*Ta); % Sound speed
u_inf   = M_inf*c_inf;      % Flow velocity
E_inf   = Pa/(gamma-1)/rho_inf + 0.5*(u_inf^2); %Flow energy

%Calculation of the variables
U1 = rho;                      
U2 = rho.*u;
U3 = rho.*v;
% U4 = rho.*E;

P = (gamma-1)*rho.*(E-0.5*(u.^2+v.^2));
H = E+P./rho;

%% Calculation of the cell fluxes
F1 = U2;
F2 = U2.^2./U1 + P;
F3 = U2.*U3./U1;
F4 = U2.*H;
G1 = U3;
G2 = U3.*U2./U1;
G3 = U3.^2./U1 + P;
G4 = U3.*H;

%Calculation of fluxes in east and west boundaries
for j = 1:Ny-1
    for i = 1:Nx-2
        FS1x(j,i+1) = (F1(j,i)+F1(j,i+1))/2;
        FS2x(j,i+1) = (F2(j,i)+F2(j,i+1))/2;
        FS3x(j,i+1) = (F3(j,i)+F3(j,i+1))/2;
        FS4x(j,i+1) = (F4(j,i)+F4(j,i+1))/2;
        GS1x(j,i+1) = (G1(j,i)+G1(j,i+1))/2;
        GS2x(j,i+1) = (G2(j,i)+G2(j,i+1))/2;
        GS3x(j,i+1) = (G3(j,i)+G3(j,i+1))/2;
        GS4x(j,i+1) = (G4(j,i)+G4(j,i+1))/2;
    end
end

%Calculation of fluxes in north and south boundaries
for j = 1:Ny-2
    for i = 1:Nx-1
        GS1y(j+1,i) = (G1(j,i)+G1(j+1,i))/2;
        GS2y(j+1,i) = (G2(j,i)+G2(j+1,i))/2;
        GS3y(j+1,i) = (G3(j,i)+G3(j+1,i))/2;
        GS4y(j+1,i) = (G4(j,i)+G4(j+1,i))/2;
        FS1y(j+1,i) = (F1(j,i)+F1(j+1,i))/2;
        FS2y(j+1,i) = (F2(j,i)+F2(j+1,i))/2;
        FS3y(j+1,i) = (F3(j,i)+F3(j+1,i))/2;
        FS4y(j+1,i) = (F4(j,i)+F4(j+1,i))/2;
    end
end

%% BOUNDARY CONDITIONS
% Inlet boundary conditions

for j = 1:Ny-1
    u_inlet(j,1) = (u_inf+u(j,1)+2*c_inf/(gamma-1)-2*sqrt(gamma*P(j,1)/rho(j,1))/(gamma-1))/2;
    c_inlet(j,1) = (gamma-1)/2*(u_inf-u_inlet(j,1)+2*c_inf/(gamma-1));
    T_inlet(j,1) = c_inlet(j,1)^2/(gamma*R);
    P_inlet(j,1) = (Pa*(1/(R*T_inlet(j,1)*rho_inf))^gamma)^(1/(1-gamma));
    rho_inlet(j,1) = P_inlet(j,1)/(R*T_inlet(j,1));
    E_inlet(j,1) = P_inlet(j,1)/(gamma-1)/rho_inlet(j,1)+0.5*u_inlet(j,1)^2;
    H_inlet(j,1) = E_inlet(j,1)+P_inlet(j,1)/rho_inlet(j,1);
end

for j = 1:Ny-1
    FS1x(j,1) = rho_inlet(j,1)*u_inlet(j,1);
    FS2x(j,1) = rho_inlet(j,1)*u_inlet(j,1)^2+P_inlet(j,1);
    FS3x(j,1) = 0;
    FS4x(j,1) = rho_inlet(j,1)*u_inlet(j,1)*H_inlet(j,1);
end

% Lower wall boundary conditions

for i = 1:Nx-1
    GS3y(1,i) = P(1,i);
    FS2y(1,i) = P(1,i);
end

% Upper wall boundary conditions

for i = 1:Nx-1
    GS3y(Ny,i) = P(Ny-1,i);
end

% Outlet boundary conditions

for j = 1:Ny-1
    rho_outlet(j,1) = (Pa/P(j,Nx-1)*rho(j,Nx-1)^gamma)^(1/gamma);
    T_outlet(j,1) = Pa/(rho_outlet(j,1)*R);
    c_outlet(j,1) = sqrt(gamma*Pa/rho_outlet(j,1));
    u_outlet(j,1) = u(j,Nx-1)+2*sqrt(gamma*P(j,Nx-1)/rho(j,Nx-1))/(gamma-1)-2*c_outlet(j,1)/(gamma-1);
    E_outlet(j,1) = Pa/(gamma-1)/rho_outlet(j,1)+0.5*(u_outlet(j,1)^2+v(j,Nx-1)^2);
    H_outlet(j,1) = E_outlet(j,1)+Pa/rho_outlet(j,1);
end
    
for j = 1:Ny-1
    FS1x(j,Nx) = rho_outlet(j,1)*u_outlet(j,1);
    FS2x(j,Nx) = rho_outlet(j,1)*u_outlet(j,1)^2+Pa;
    FS3x(j,Nx) = rho_outlet(j,1)*u_outlet(j,1)*v(j,Nx-1);
    FS4x(j,Nx) = rho_outlet(j,1)*u_outlet(j,1)*H_outlet(j,1);
end
end
