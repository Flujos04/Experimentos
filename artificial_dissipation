function [D1, D2, D3, D4] = artificial_dissipation (k4,k2,u,v,gamma,P,rho,Nx,Ny,X,Y)

U1 = rho;                      
U2 = rho.*u;
U3 = rho.*v;
% U4 = rho.*E;

%  Definition of cell normals and geometry
dSy_east = Zeros; dSx_east = Zeros;
dSy_west = Zeros; dSx_west = Zeros;
dSy_north = Zeros; dSx_north = Zeros;
dSy_south = Zeros; dSx_south = Zeros;

for j = 1:Ny-1
    for i = 1:Nx-1
        dSy_east(j,i) = Y(j+1,i+1)-Y(j,i+1);
        dSx_east(j,i) = -X(j+1,i+1)+X(j,i+1);
        dSy_west(j,i) = -Y(j+1,i)+Y(j,i);
        dSx_west(j,i) = X(j+1,i)-X(j,i);       
        dSy_north(j,i) = Y(j+1,i)-Y(j+1,i+1);
        dSx_north(j,i) = X(j+1,i+1)-X(j+1,i);        
        dSy_south(j,i) = Y(j,i+1)-Y(j,i);
        dSx_south(j,i) = X(j,i)-X(j,i+1);
    end
end

%Loop to create the gamma artificial dissipation term for the F horizontal flux
for j = 1:Ny-1
    for i = 1:Nx-2
        c_east = sqrt(gamma*P(j,i)/rho(j,i));
        norm_east = sqrt(dSy_east(j,i)^2+dSx_east(j,i)^2);
        c_west = sqrt(gamma*P(j,i+1)/rho(j,i+1));
        norm_west = sqrt(dSy_west(j,i+1)^2+dSx_west(j,i+1)^2);
        gamma_east(j,i) = 0.5*k4*(u(j,i)*dSy_east(j,i)+v(j,i)*dSx_east(j,i)+c_east*norm_east);
        gamma_west(j,i+1) = 0.5*k4*(u(j,i+1)*dSy_west(j,i+1)+v(j,i+1)*dSx_west(j,i+1)+c_west*norm_west);       
    end
end

%Loop to create the gamma artificial dissipation term for the G vertical flux
for j = 1:Ny-2
    for i = 1:Nx-1
        c_north = sqrt(gamma*P(j,i)/rho(j,i));
        norm_north = sqrt(dSy_north(j,i)^2+dSx_north(j,i)^2);
        c_south = sqrt(gamma*P(j+1,i)/rho(j+1,i));
        norm_south = sqrt(dSy_south(j+1,i)^2+dSx_south(j+1,i)^2);
        gamma_north(j,i) = 0.5*k4*(u(j,i)*dSy_north(j,i)+v(j,i)*dSx_north(j,i)+c_north*norm_north);
        gamma_south(j+1,i) = 0.5*k4*(u(j+1,i)*dSy_south(j+1,i)+v(j+1,i)*dSx_south(j+1,i)+c_south*norm_south);        
    end
end

%Pressure gradients
for j = 1:Ny-1
    for i = 1:Nx-3        
        Nux(j,i+1) = abs((P(j,i+2)+P(j,i)-2*P(j,i+1))/(P(j,i+2)+P(j,i)+2*P(j,i+1)));        
    end
end

for j = 1:Ny-3
    for i = 1:Nx-1        
        Nuy(j+1,i) = abs((P(j+2,i)+P(j,i)-2*P(j+1,i))/(P(j+2,i)+P(j,i)+2*P(j+1,i)));        
    end
end

%Loop to create the eta artificial dissipation term for the F horizontal flux
for j = 1:Ny-1
    for i = 2:Nx-3
        c_east = sqrt(gamma*P(j,i)/rho(j,i));
        norm_east = sqrt(dSy_east(j,i)^2+dSx_east(j,i)^2);
        c_west = sqrt(gamma*P(j,i+1)/rho(j,i+1));
        norm_west = sqrt(dSy_west(j,i+1)^2+dSx_west(j,i+1)^2);
        eta_east(j,i) = 0.5*k2*(u(j,i)*dSy_east(j,i)+v(j,i)*dSx_east(j,i)+c_east*norm_east)*max([Nux(j,i+1),Nux(j,i),Nux(j,i-1),Nux(j,i+2)]);
        eta_west(j,i+1) = 0.5*k2*(u(j,i+1)*dSy_west(j,i+1)+v(j,i+1)*dSx_west(j,i+1)+c_west*norm_west)*max([Nux(j,i+1),Nux(j,i),Nux(j,i-1),Nux(j,i+2)]);        
    end
end

%Loop to create the eta artificial dissipation term for the G vertical flux
for j = 2:Ny-3
    for i = 1:Nx-1
        c_north = sqrt(gamma*P(j,i)/rho(j,i));
        norm_north = sqrt(dSy_north(j,i)^2+dSx_north(j,i)^2);
        c_south = sqrt(gamma*P(j+1,i)/rho(j+1,i));
        norm_south = sqrt(dSy_south(j+1,i)^2+dSx_south(j+1,i)^2);
        eta_north(j,i) = 0.5*k2*(u(j,i)*dSy_north(j,i)+v(j,i)*dSx_north(j,i)+c_north*norm_north)*max([Nuy(j+1,i),Nuy(j,i),Nuy(j-1,i),Nuy(j+2,i)]);
        eta_south(j+1,i) = 0.5*k2*(u(j+1,i)*dSy_south(j+1,i)+v(j+1,i)*dSx_south(j+1,i)+c_south*norm_south)*max([Nuy(j+1,i),Nuy(j,i),Nuy(j-1,i),Nuy(j+2,i)]);        
    end
end


for j = 1:Ny-1
    for i = 1:Nx-1        
        gamma_east(j,i) = max(0,gamma_east(j,i)-eta_east(j,i));
        gamma_north(j,i) = max(0,gamma_north(j,i)-eta_north(j,i));
        gamma_west(j,i) = max(0,gamma_west(j,i)-eta_west(j,i));
        gamma_south(j,i) = max(0,gamma_south(j,i)-eta_south(j,i));        
    end
end

%Artificial Dissipation term for North and South faces
for j = 1:Ny-2
    for i = 1:Nx-1        
        D1_north(j,i) = gamma_north(j,i)*(U1(j+1,i)-U1(j,i))+eta_north(j,i)*(U1(j+1,i)-U1(j,i));
        D2_north(j,i) = gamma_north(j,i)*(U2(j+1,i)-U2(j,i))+eta_north(j,i)*(U2(j+1,i)-U2(j,i));
        D3_north(j,i) = gamma_north(j,i)*(U3(j+1,i)-U3(j,i))+eta_north(j,i)*(U3(j+1,i)-U3(j,i));
        D4_north(j,i) = gamma_north(j,i)*(U4(j+1,i)-U4(j,i))+eta_north(j,i)*(U4(j+1,i)-U4(j,i));
        D1_south(j+1,i) = gamma_south(j,i)*(U1(j+1,i)-U1(j,i))+eta_south(j,i)*(U1(j+1,i)-U1(j,i));
        D2_south(j+1,i) = gamma_south(j,i)*(U2(j+1,i)-U2(j,i))+eta_south(j,i)*(U2(j+1,i)-U2(j,i));
        D3_south(j+1,i) = gamma_south(j,i)*(U3(j+1,i)-U3(j,i))+eta_south(j,i)*(U3(j+1,i)-U3(j,i));
        D4_south(j+1,i) = gamma_south(j,i)*(U4(j+1,i)-U4(j,i))+eta_south(j,i)*(U4(j+1,i)-U4(j,i));    
    end
end

%Artificial Dissipation term for East and West faces
for j = 1:Ny-1
    for i = 1:Nx-2       
        D1_east(j,i) = gamma_east(j,i)*(U1(j,i+1)-U1(j,i))+eta_east(j,i)*(U1(j,i+1)-U1(j,i));
        D2_east(j,i) = gamma_east(j,i)*(U2(j,i+1)-U2(j,i))+eta_east(j,i)*(U2(j,i+1)-U2(j,i));
        D3_east(j,i) = gamma_east(j,i)*(U3(j,i+1)-U3(j,i))+eta_east(j,i)*(U3(j,i+1)-U3(j,i));
        D4_east(j,i) = gamma_east(j,i)*(U4(j,i+1)-U4(j,i))+eta_east(j,i)*(U4(j,i+1)-U4(j,i));
        D1_west(j,i+1) = gamma_west(j,i)*(U1(j,i+1)-U1(j,i))+eta_west(j,i)*(U1(j,i+1)-U1(j,i));
        D2_west(j,i+1) = gamma_west(j,i)*(U2(j,i+1)-U2(j,i))+eta_west(j,i)*(U2(j,i+1)-U2(j,i));
        D3_west(j,i+1) = gamma_west(j,i)*(U3(j,i+1)-U3(j,i))+eta_west(j,i)*(U3(j,i+1)-U3(j,i));
        D4_west(j,i+1) = gamma_west(j,i)*(U4(j,i+1)-U4(j,i))+eta_west(j,i)*(U4(j,i+1)-U4(j,i));      
    end
end

%Total artificial dissipation for a cell
for j = 1:Ny-1
    for i = 1:Nx-1        
        D1(j,i) = D1_north(j,i)+D1_south(j,i)+D1_east(j,i)+D1_west(j,i);
        D2(j,i) = D2_north(j,i)+D2_south(j,i)+D2_east(j,i)+D2_west(j,i);
        D3(j,i) = D3_north(j,i)+D3_south(j,i)+D3_east(j,i)+D3_west(j,i);
        D4(j,i) = D4_north(j,i)+D4_south(j,i)+D4_east(j,i)+D4_west(j,i);        
    end
end
end
